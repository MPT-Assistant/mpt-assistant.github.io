{"version":3,"sources":["TSX/pages/main.tsx","TSX/components/LoadingSpinner.tsx","TS/api.ts","TSX/pages/schedule.tsx","TSX/pages/replacements.tsx","TSX/pages/settings.tsx","TSX/app.tsx","TSX/utils/CookieAlert.tsx","index.tsx"],"names":["Main","className","LoadingSpinner","Spinner","animation","variant","API","MPT","Schedule","useCookies","groupData","useState","groupSchedule","updateGroupSchedule","ParsedSchedule","updateParsedSchedule","isLoading","setLoading","useEffect","a","length","getGroupSchedule","id","uid","Response","response","selectedTime","Date","valueOf","nowSchedule","find","x","num","getDay","PreParsedSchedule","moment","format","Table","bordered","lessons","map","lesson","name","join","teacher","CheckInstallGroup","Alert","Replacements","ParsedGroupReplacements","updateParsedGroupReplacements","isLoaded","setLoaded","getCurrentReplacements","group_id","currentReplacements","ParsedReplacements","replacement","day","date","push","replacements","lessonNum","addToSite","detected","oldLessonName","oldLessonTeacher","newLessonName","newLessonTeacher","PreParsedReplacements","Card","Body","Title","Text","Settings","perhapsGroups","updateGroupList","setGroupData","removeGroupData","getGroupList","Form","Group","controlId","bg","style","fontSize","specialty","Button","onClick","options","filterBy","labelKey","group","paginate","placeholder","emptyLabel","maxResults","onChange","selected","expires","ShowMenu","window","location","pathname","selectedButton","selectButton","basename","exact","path","component","Navbar","expand","fixed","Brand","as","Link","to","block","disabled","Toggle","aria-controls","backgroundColor","Collapse","Nav","App","callbackFunction","cookies","setCookie","accept","Heading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.892bf800.chunk.js","sourcesContent":["export default function Main() {\n\treturn (\n\t\t<div className=\"text\">\n\t\t\t<h1>This is Main Page</h1>\n\t\t</div>\n\t);\n}\n","import { Spinner } from \"react-bootstrap\";\n\nexport default function LoadingSpinner() {\n\treturn (\n\t\t<div className=\"loading-spinner\">\n\t\t\t<Spinner animation=\"border\" variant=\"success\" />\n\t\t</div>\n\t);\n}\n","import { MPT } from \"@mpt-assistant/api-wrapper\";\n\nconst API = new MPT();\n\nexport default API;\n","import moment from \"moment\";\n\nimport { useState, useEffect } from \"react\";\nimport { Alert, Table } from \"react-bootstrap\";\nimport { useCookies } from \"react-cookie\";\n\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nimport API from \"../../TS/api\";\n\nfunction Schedule() {\n\tconst [groupData] = useCookies([\"uid\"]);\n\tconst [groupSchedule, updateGroupSchedule] = useState<\n\t\tArray<{\n\t\t\tname: string;\n\t\t\tnum: number;\n\t\t\tplace: string;\n\t\t\tlessons: Array<{\n\t\t\t\tnum: number;\n\t\t\t\tname: [string, string?];\n\t\t\t\tteacher: [string, string?];\n\t\t\t}>;\n\t\t}>\n\t>([]);\n\tconst [ParsedSchedule, updateParsedSchedule] = useState<JSX.Element>(\n\t\t<div></div>,\n\t);\n\tconst [isLoading, setLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\t(async function getGroupSchedule() {\n\t\t\tif (groupSchedule.length === 0) {\n\t\t\t\tconst Response = await API.getGroupSchedule({ id: groupData.uid });\n\t\t\t\tupdateGroupSchedule(Response.response);\n\t\t\t\tconst selectedTime = new Date(\n\t\t\t\t\tnew Date().valueOf() + 48 * 24 * 60 * 60 * 1000,\n\t\t\t\t);\n\t\t\t\tconst nowSchedule = Response.response.find(\n\t\t\t\t\t(x) => x.num === selectedTime.getDay(),\n\t\t\t\t);\n\t\t\t\tconst PreParsedSchedule = nowSchedule ? (\n\t\t\t\t\t<div className=\"schedule\">\n\t\t\t\t\t\t<h1 className=\"white-text\">\n\t\t\t\t\t\t\tРасписание на {moment(selectedTime).format(\"DD.MM.YYYY\")}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<Table variant=\"dark\" bordered className=\"table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Пара</th>\n\t\t\t\t\t\t\t\t\t<th>Предмет</th>\n\t\t\t\t\t\t\t\t\t<th>Преподаватель</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{nowSchedule.lessons.map((lesson) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>{lesson.num}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{lesson.name.join()}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{lesson.teacher.join()}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Сегодня нет пар</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\tupdateParsedSchedule(PreParsedSchedule);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t})();\n\t});\n\n\treturn isLoading ? <LoadingSpinner /> : ParsedSchedule;\n}\n\nexport default function CheckInstallGroup() {\n\tconst [groupData] = useCookies([\"uid\"]);\n\n\treturn groupData.uid ? (\n\t\t<Schedule />\n\t) : (\n\t\t<Alert variant=\"danger\">\n\t\t\tУ вас не установлена группа, пожалуйста перейдите в настройки и установите\n\t\t\tеё.\n\t\t</Alert>\n\t);\n}\n","import moment from \"moment\";\n\nimport { useState, useEffect } from \"react\";\nimport { Alert, Table, Card, ListGroup } from \"react-bootstrap\";\nimport { useCookies } from \"react-cookie\";\n\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nimport API from \"../../TS/api\";\n\nfunction Replacements() {\n\tconst [groupData] = useCookies([\"uid\", \"group_id\"]);\n\n\tconst [\n\t\tParsedGroupReplacements,\n\t\tupdateParsedGroupReplacements,\n\t] = useState<JSX.Element>(<div></div>);\n\tconst [isLoading, setLoading] = useState<boolean>(true);\n\tconst [isLoaded, setLoaded] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t(async function getGroupReplacements() {\n\t\t\tif (!isLoaded) {\n\t\t\t\tsetLoaded(true);\n\t\t\t\tconst currentReplacements = await API.getCurrentReplacements({\n\t\t\t\t\tid: groupData.group_id,\n\t\t\t\t});\n\t\t\t\tconst ParsedReplacements: Array<{\n\t\t\t\t\tdate: string;\n\t\t\t\t\treplacements: Array<{\n\t\t\t\t\t\tlessonNum: number;\n\t\t\t\t\t\taddToSite: Date;\n\t\t\t\t\t\tdetected: Date;\n\t\t\t\t\t\toldLessonName: string;\n\t\t\t\t\t\toldLessonTeacher: string;\n\t\t\t\t\t\tnewLessonName: string;\n\t\t\t\t\t\tnewLessonTeacher: string;\n\t\t\t\t\t}>;\n\t\t\t\t}> = [];\n\t\t\t\tcurrentReplacements.response.map((replacement): void => {\n\t\t\t\t\tconst currentDay =\n\t\t\t\t\t\tParsedReplacements.find((day) => day.date === replacement.date) ||\n\t\t\t\t\t\tParsedReplacements[\n\t\t\t\t\t\t\tParsedReplacements.push({\n\t\t\t\t\t\t\t\tdate: replacement.date,\n\t\t\t\t\t\t\t\treplacements: [],\n\t\t\t\t\t\t\t}) - 1\n\t\t\t\t\t\t];\n\t\t\t\t\tcurrentDay.replacements.push({\n\t\t\t\t\t\tlessonNum: replacement.lessonNum,\n\t\t\t\t\t\taddToSite: replacement.addToSite,\n\t\t\t\t\t\tdetected: replacement.detected,\n\t\t\t\t\t\toldLessonName: replacement.oldLessonName,\n\t\t\t\t\t\toldLessonTeacher: replacement.oldLessonTeacher,\n\t\t\t\t\t\tnewLessonName: replacement.newLessonName,\n\t\t\t\t\t\tnewLessonTeacher: replacement.newLessonTeacher,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tconst PreParsedReplacements =\n\t\t\t\t\tcurrentReplacements.response.length === 0 ? (\n\t\t\t\t\t\t<h1 className=\"white-text\">На ближайшее время замен нет</h1>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"replacements\">\n\t\t\t\t\t\t\t{ParsedReplacements.map((day) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Card className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>Замены на {day.date}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Table variant=\"dark\" bordered className=\"table\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Пара</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Предмет</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Преподаватель</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Новый предмет</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Новый преподаватель</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{day.replacements.map((replacement) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.lessonNum}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.oldLessonName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.oldLessonTeacher}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.newLessonName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.newLessonTeacher}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t{/* <Table variant=\"dark\" bordered className=\"table\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>Пара</th>\n\t\t\t\t\t\t\t\t\t\t<th>Предмет</th>\n\t\t\t\t\t\t\t\t\t\t<th>Преподаватель</th>\n\t\t\t\t\t\t\t\t\t\t<th>Новый предмет</th>\n\t\t\t\t\t\t\t\t\t\t<th>Новый преподаватель</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{currentReplacements.response.map((replacement) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.lessonNum}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.oldLessonName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.oldLessonTeacher}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.newLessonName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{replacement.newLessonTeacher}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\tupdateParsedGroupReplacements(PreParsedReplacements);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t})();\n\t});\n\n\treturn isLoading ? <LoadingSpinner /> : ParsedGroupReplacements;\n}\n\nexport default function CheckInstallGroup() {\n\tconst [groupData] = useCookies([\"uid\"]);\n\n\treturn groupData.uid ? (\n\t\t<Replacements />\n\t) : (\n\t\t<Alert variant=\"danger\">\n\t\t\tУ вас не установлена группа, пожалуйста перейдите в настройки и установите\n\t\t\tеё.\n\t\t</Alert>\n\t);\n}\n","import { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nimport API from \"../../TS/api\";\n\nexport default function Settings() {\n\tconst [perhapsGroups, updateGroupList] = useState<\n\t\tArray<{\n\t\t\tid: string;\n\t\t\tuid: string;\n\t\t\tname: string;\n\t\t\tspecialty: string;\n\t\t\tspecialtyID: string;\n\t\t}>\n\t>([]);\n\tconst [groupData, setGroupData, removeGroupData] = useCookies([\n\t\t\"uid\",\n\t\t\"group_id\",\n\t\t\"name\",\n\t\t\"specialty\",\n\t]);\n\tconst [isLoading, setLoading] = useState<boolean>(true);\n\n\tuseEffect(() => {\n\t\t(async function GetGroups() {\n\t\t\tif (perhapsGroups.length === 0) {\n\t\t\t\tconst Response = await API.getGroupList({});\n\t\t\t\tupdateGroupList(Response.response);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst resetGroupData = () => {\n\t\tremoveGroupData(\"uid\");\n\t\tremoveGroupData(\"group_id\");\n\t\tremoveGroupData(\"name\");\n\t\tremoveGroupData(\"specialty\");\n\t};\n\n\treturn (\n\t\t<div className=\"settings main\">\n\t\t\t{isLoading ? (\n\t\t\t\t<LoadingSpinner />\n\t\t\t) : (\n\t\t\t\t<form>\n\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlInput1\">\n\t\t\t\t\t\t{groupData.uid ? (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tbg=\"secondary\"\n\t\t\t\t\t\t\t\tclassName=\"white-text\"\n\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Card.Title>Информация о группе</Card.Title>\n\t\t\t\t\t\t\t\t\t<Card.Text>Ваша группа: {groupData.name}</Card.Text>\n\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\tВаша специальность: {groupData.specialty}\n\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t<Button variant=\"warning\" onClick={() => resetGroupData()}>\n\t\t\t\t\t\t\t\t\tИзменить группу\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"text\">\n\t\t\t\t\t\t\t\t\t<h3>Введите вашу группу</h3>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<Typeahead\n\t\t\t\t\t\t\t\t\toptions={perhapsGroups}\n\t\t\t\t\t\t\t\t\tfilterBy={[\"name\"]}\n\t\t\t\t\t\t\t\t\tlabelKey={(group) => group.name}\n\t\t\t\t\t\t\t\t\tpaginate={false}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Например, БИ50-3-19...\"\n\t\t\t\t\t\t\t\t\temptyLabel=\"Неверное название группы\"\n\t\t\t\t\t\t\t\t\tmaxResults={3}\n\t\t\t\t\t\t\t\t\tonChange={([selected]) => {\n\t\t\t\t\t\t\t\t\t\tsetGroupData(\"uid\", selected.uid, {\n\t\t\t\t\t\t\t\t\t\t\texpires: new Date(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Date().valueOf() + 5 * 365 * 24 * 60 * 60 * 1000,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetGroupData(\"group_id\", selected.id, {\n\t\t\t\t\t\t\t\t\t\t\texpires: new Date(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Date().valueOf() + 5 * 365 * 24 * 60 * 60 * 1000,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetGroupData(\"name\", selected.name, {\n\t\t\t\t\t\t\t\t\t\t\texpires: new Date(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Date().valueOf() + 5 * 365 * 24 * 60 * 60 * 1000,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetGroupData(\"specialty\", selected.specialty, {\n\t\t\t\t\t\t\t\t\t\t\texpires: new Date(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Date().valueOf() + 5 * 365 * 24 * 60 * 60 * 1000,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport { Nav, Navbar, Button } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Main from \"./pages/main\";\nimport Schedule from \"./pages/schedule\";\nimport Replacements from \"./pages/replacements\";\nimport Settings from \"./pages/settings\";\nimport CookieAlert from \"./utils/CookieAlert\";\n\nfunction ShowMenu() {\n\tconst [selectedButton, selectButton] = useState(window.location.pathname);\n\treturn (\n\t\t<Router basename=\"/\">\n\t\t\t<Route exact path=\"/\" component={Main} />\n\t\t\t<Route path=\"/schedule\" component={Schedule} />\n\t\t\t<Route path=\"/replacements\" component={Replacements} />\n\t\t\t<Route path=\"/settings\" component={Settings} />\n\n\t\t\t<Navbar bg=\"dark\" expand=\"lg\" fixed=\"bottom\">\n\t\t\t\t<Navbar.Brand as={Link} to=\"/\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={selectedButton === \"/\" ? \"primary\" : \"secondary\"}\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tdisabled={selectedButton === \"/\"}\n\t\t\t\t\t\tonClick={() => selectButton(\"/\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"text\">MPT Assistant</div>\n\t\t\t\t\t</Button>\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle\n\t\t\t\t\taria-controls=\"navigation\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: \"#d4d4d4\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Navbar.Collapse id=\"navigation\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/schedule\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tselectedButton === \"/schedule\" ? \"primary\" : \"secondary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tdisabled={selectedButton === \"/schedule\"}\n\t\t\t\t\t\t\t\tonClick={() => selectButton(\"/schedule\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"text\">Расписание</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/replacements\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tselectedButton === \"/replacements\" ? \"primary\" : \"secondary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tdisabled={selectedButton === \"/replacements\"}\n\t\t\t\t\t\t\t\tonClick={() => selectButton(\"/replacements\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"text\">Замены</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/settings\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tselectedButton === \"/settings\" ? \"primary\" : \"secondary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tdisabled={selectedButton === \"/settings\"}\n\t\t\t\t\t\t\t\tonClick={() => selectButton(\"/settings\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"text\">Настройки</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t</Router>\n\t);\n}\n\nexport default function App() {\n\tconst [cookies, setCookie] = useCookies([\"accept\"]);\n\treturn cookies.accept ? <ShowMenu /> : CookieAlert(setCookie);\n}\n","import { Alert, Button } from \"react-bootstrap\";\n\nexport default function CookieAlert(callbackFunction: any) {\n\treturn (\n\t\t<Alert variant=\"success\">\n\t\t\t<Alert.Heading>\n\t\t\t\tЭтот сайт использует cookie для хранения данных.\n\t\t\t</Alert.Heading>\n\t\t\t<p>\n\t\t\t\tПродолжая использовать сайт, Вы даёте согласие на работу с этими\n\t\t\t\tфайлами.\n\t\t\t</p>\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tcallbackFunction(\"accept\", true, {\n\t\t\t\t\t\t\texpires: new Date(\n\t\t\t\t\t\t\t\tnew Date().valueOf() + 5 * 365 * 24 * 60 * 60 * 1000,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"outline-success\"\n\t\t\t\t>\n\t\t\t\t\tПринять и закрыть\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Alert>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./SCSS/main.scss\";\n\nimport App from \"./TSX/app\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}